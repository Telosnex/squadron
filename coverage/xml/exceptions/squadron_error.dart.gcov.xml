<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<?xml-stylesheet type="text/xsl" href="../jgenhtml.xsl"?><coverage branch-rate="NaN" branches-covered="0" branches-valid="0" complexity="0" date="2024-09-07" filename="squadron_error.dart" function-rate="NaN" functions-covered="0" functions-valid="0" line-rate="0.9285714" lines-covered="13" lines-valid="14" package="/exceptions" testname="lcov.info" version="1.5">
    <lines>
        <line>
            <code>import 'package:meta/meta.dart';</code>
        </line>
        <line>
            <code/>
        </line>
        <line>
            <code>import '_well_known_exceptions.dart';</code>
        </line>
        <line>
            <code>import 'squadron_exception.dart';</code>
        </line>
        <line>
            <code/>
        </line>
        <line>
            <code>/// Squadron Error</code>
        </line>
        <line>
            <code>class SquadronError extends SquadronException {</code>
        </line>
        <line hits="24">
            <code>  SquadronError._(super.message, [super.stackTrace]) : super.init();</code>
            <hit count="24" name="&lt;unnamed&gt;"/>
        </line>
        <line>
            <code/>
        </line>
        <line hits="2">
            <code>  @override</code>
            <hit count="2" name="&lt;unnamed&gt;"/>
        </line>
        <line hits="4">
            <code>  List serialize() =&gt; List.unmodifiable([</code>
            <hit count="4" name="&lt;unnamed&gt;"/>
        </line>
        <line>
            <code>        $squadronErrorType,</code>
        </line>
        <line hits="2">
            <code>        message,</code>
            <hit count="2" name="&lt;unnamed&gt;"/>
        </line>
        <line hits="4">
            <code>        stackTrace?.toString(),</code>
            <hit count="4" name="&lt;unnamed&gt;"/>
        </line>
        <line hits="0">
            <code>      ]);</code>
        </line>
        <line>
            <code>}</code>
        </line>
        <line>
            <code/>
        </line>
        <line>
            <code>const _$type = 0;</code>
        </line>
        <line>
            <code>const _$message = 1;</code>
        </line>
        <line>
            <code>const _$stackTrace = 2;</code>
        </line>
        <line>
            <code/>
        </line>
        <line>
            <code>@internal</code>
        </line>
        <line>
            <code>extension SquadronErrorExt on SquadronError {</code>
        </line>
        <line hits="10">
            <code>  static SquadronError create(String message, [StackTrace? stackTrace]) =&gt;</code>
            <hit count="10" name="&lt;unnamed&gt;"/>
        </line>
        <line hits="15">
            <code>      SquadronError._(message, stackTrace);</code>
            <hit count="15" name="&lt;unnamed&gt;"/>
        </line>
        <line>
            <code/>
        </line>
        <line hits="6">
            <code>  static SquadronException? deserialize(List exceptionInfo) =&gt;</code>
            <hit count="6" name="&lt;unnamed&gt;"/>
        </line>
        <line hits="8">
            <code>      (exceptionInfo[_$type] == $squadronErrorType)</code>
            <hit count="8" name="&lt;unnamed&gt;"/>
        </line>
        <line hits="6">
            <code>          ? SquadronError._(</code>
            <hit count="6" name="&lt;unnamed&gt;"/>
        </line>
        <line hits="6">
            <code>              exceptionInfo[_$message],</code>
            <hit count="6" name="&lt;unnamed&gt;"/>
        </line>
        <line hits="8">
            <code>              SquadronException.loadStackTrace(exceptionInfo[_$stackTrace]),</code>
            <hit count="8" name="&lt;unnamed&gt;"/>
        </line>
        <line>
            <code>            )</code>
        </line>
        <line hits="4">
            <code>          : null;</code>
            <hit count="4" name="&lt;unnamed&gt;"/>
        </line>
        <line>
            <code>}</code>
        </line>
    </lines>
    <config branch-coverage="true" description-file="false" function-coverage="true" genhtml_hi_limit="90" genhtml_med_limit="75" legend="false" no-sort="false" no-source="false"/>
    <base href="../"/>
    <base href="../"/>
</coverage>
