<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<?xml-stylesheet type="text/xsl" href="../jgenhtml.xsl"?><coverage branch-rate="NaN" branches-covered="0" branches-valid="0" complexity="0" date="2024-09-08" filename="worker_exception.dart" function-rate="NaN" functions-covered="0" functions-valid="0" line-rate="1.0" lines-covered="18" lines-valid="18" package="/exceptions" testname="lcov.info" version="1.5">
    <lines>
        <line>
            <code>import 'package:meta/meta.dart';</code>
        </line>
        <line>
            <code/>
        </line>
        <line>
            <code>import '_well_known_exceptions.dart';</code>
        </line>
        <line>
            <code>import 'squadron_exception.dart';</code>
        </line>
        <line>
            <code/>
        </line>
        <line>
            <code>/// Exception to keep track of errors encountered in a worker.</code>
        </line>
        <line>
            <code>class WorkerException extends SquadronException {</code>
        </line>
        <line>
            <code>  /// Creates a new [WorkerException] to capture error context.</code>
        </line>
        <line hits="10">
            <code>  WorkerException(super.message, [super.stackTrace, int? command])</code>
            <hit count="10" name="&lt;unnamed&gt;"/>
        </line>
        <line>
            <code>      : _command = command,</code>
        </line>
        <line hits="10">
            <code>        super.init();</code>
            <hit count="10" name="&lt;unnamed&gt;"/>
        </line>
        <line>
            <code/>
        </line>
        <line hits="5">
            <code>  @override</code>
            <hit count="5" name="&lt;unnamed&gt;"/>
        </line>
        <line hits="12">
            <code>  List serialize() =&gt; List.unmodifiable([</code>
            <hit count="12" name="&lt;unnamed&gt;"/>
        </line>
        <line>
            <code>        $workerExceptionType,</code>
        </line>
        <line hits="7">
            <code>        message,</code>
            <hit count="7" name="&lt;unnamed&gt;"/>
        </line>
        <line hits="12">
            <code>        stackTrace?.toString(),</code>
            <hit count="12" name="&lt;unnamed&gt;"/>
        </line>
        <line hits="7">
            <code>        _command,</code>
            <hit count="7" name="&lt;unnamed&gt;"/>
        </line>
        <line hits="2">
            <code>      ]);</code>
            <hit count="2" name="&lt;unnamed&gt;"/>
        </line>
        <line>
            <code/>
        </line>
        <line>
            <code>  /// Command.</code>
        </line>
        <line hits="6">
            <code>  int? get command =&gt; _command;</code>
            <hit count="6" name="&lt;unnamed&gt;"/>
        </line>
        <line>
            <code>  int? _command;</code>
        </line>
        <line>
            <code>}</code>
        </line>
        <line>
            <code/>
        </line>
        <line>
            <code>const _$type = 0;</code>
        </line>
        <line>
            <code>const _$message = 1;</code>
        </line>
        <line>
            <code>const _$stackTrace = 2;</code>
        </line>
        <line>
            <code>const _$command = 3;</code>
        </line>
        <line>
            <code/>
        </line>
        <line>
            <code>@internal</code>
        </line>
        <line>
            <code>extension WorkerExceptionExt on WorkerException {</code>
        </line>
        <line hits="4">
            <code>  void setCommand(int command) {</code>
            <hit count="4" name="&lt;unnamed&gt;"/>
        </line>
        <line hits="9">
            <code>    _command = command;</code>
            <hit count="9" name="&lt;unnamed&gt;"/>
        </line>
        <line>
            <code>  }</code>
        </line>
        <line>
            <code/>
        </line>
        <line hits="11">
            <code>  static WorkerException? deserialize(List data) =&gt;</code>
            <hit count="11" name="&lt;unnamed&gt;"/>
        </line>
        <line hits="16">
            <code>      (data[_$type] == $workerExceptionType)</code>
            <hit count="16" name="&lt;unnamed&gt;"/>
        </line>
        <line hits="11">
            <code>          ? WorkerException(</code>
            <hit count="11" name="&lt;unnamed&gt;"/>
        </line>
        <line hits="11">
            <code>              data[_$message],</code>
            <hit count="11" name="&lt;unnamed&gt;"/>
        </line>
        <line hits="16">
            <code>              SquadronException.loadStackTrace(data[_$stackTrace]),</code>
            <hit count="16" name="&lt;unnamed&gt;"/>
        </line>
        <line hits="16">
            <code>              (data[_$command] as num?)?.toInt(),</code>
            <hit count="16" name="&lt;unnamed&gt;"/>
        </line>
        <line>
            <code>            )</code>
        </line>
        <line hits="6">
            <code>          : null;</code>
            <hit count="6" name="&lt;unnamed&gt;"/>
        </line>
        <line>
            <code>}</code>
        </line>
    </lines>
    <config branch-coverage="true" description-file="false" function-coverage="true" genhtml_hi_limit="90" genhtml_med_limit="75" legend="false" no-sort="false" no-source="false"/>
    <base href="../"/>
    <base href="../"/>
</coverage>
