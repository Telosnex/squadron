<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<?xml-stylesheet type="text/xsl" href="../../jgenhtml.xsl"?><coverage branch-rate="NaN" branches-covered="0" branches-valid="0" complexity="0" date="2024-09-08" filename="_local_worker.dart" function-rate="NaN" functions-covered="0" functions-valid="0" line-rate="1.0" lines-covered="7" lines-valid="7" package="/_impl/web" testname="lcov.info" version="1.5">
    <lines>
        <line>
            <code>import 'dart:async';</code>
        </line>
        <line>
            <code>import 'dart:js_interop';</code>
        </line>
        <line>
            <code/>
        </line>
        <line>
            <code>import 'package:web/web.dart' as web;</code>
        </line>
        <line>
            <code/>
        </line>
        <line>
            <code>import '../../channel.dart';</code>
        </line>
        <line>
            <code>import '../../exceptions/exception_manager.dart';</code>
        </line>
        <line>
            <code>import '../../local_worker/local_worker.dart';</code>
        </line>
        <line>
            <code>import '../../worker_service.dart';</code>
        </line>
        <line>
            <code>import '../xplat/_worker_runner.dart';</code>
        </line>
        <line>
            <code>import '_worker_runner.dart';</code>
        </line>
        <line>
            <code/>
        </line>
        <line>
            <code>class _WebLocalWorker&lt;W extends WorkerService&gt; extends LocalWorker&lt;W&gt; {</code>
        </line>
        <line hits="1">
            <code>  _WebLocalWorker._(super.service, ExceptionManager exceptionManager) {</code>
            <hit count="1" name="&lt;unnamed&gt;"/>
        </line>
        <line hits="1">
            <code>    final runner = WorkerRunner.use(this);</code>
            <hit count="1" name="&lt;unnamed&gt;"/>
        </line>
        <line hits="1">
            <code>    _port.port1.onmessage = runner.handle.toJS;</code>
            <hit count="1" name="&lt;unnamed&gt;"/>
        </line>
        <line>
            <code>    _channel = Channel.deserialize(</code>
        </line>
        <line hits="1">
            <code>        _port.port2, runner.internalLogger, exceptionManager);</code>
            <hit count="1" name="&lt;unnamed&gt;"/>
        </line>
        <line>
            <code>  }</code>
        </line>
        <line>
            <code/>
        </line>
        <line>
            <code>  final _port = web.MessageChannel();</code>
        </line>
        <line hits="1">
            <code>  late Channel? _channel;</code>
            <hit count="1" name="&lt;unnamed&gt;"/>
        </line>
        <line>
            <code/>
        </line>
        <line>
            <code>  @override</code>
        </line>
        <line>
            <code>  Channel? get channel =&gt; _channel;</code>
        </line>
        <line>
            <code/>
        </line>
        <line>
            <code>  @override</code>
        </line>
        <line>
            <code>  void stop() {</code>
        </line>
        <line hits="1">
            <code>    _port.port1.close();</code>
            <hit count="1" name="&lt;unnamed&gt;"/>
        </line>
        <line>
            <code>    _port.port2.close();</code>
        </line>
        <line hits="1">
            <code>    _channel?.close();</code>
            <hit count="1" name="&lt;unnamed&gt;"/>
        </line>
        <line>
            <code>    _channel = null;</code>
        </line>
        <line>
            <code>  }</code>
        </line>
        <line>
            <code/>
        </line>
        <line>
            <code>  @override</code>
        </line>
        <line>
            <code>  ExceptionManager get exceptionManager =&gt;</code>
        </line>
        <line>
            <code>      (_exceptionManager ??= ExceptionManager());</code>
        </line>
        <line>
            <code>  ExceptionManager? _exceptionManager;</code>
        </line>
        <line>
            <code/>
        </line>
        <line>
            <code>  @override</code>
        </line>
        <line>
            <code>  FutureOr&lt;void&gt; start() {}</code>
        </line>
        <line>
            <code>}</code>
        </line>
        <line>
            <code/>
        </line>
        <line>
            <code>/// Creates a [LocalWorker] on a browser platform.</code>
        </line>
        <line>
            <code>LocalWorker&lt;W&gt; createLocalWorker&lt;W extends WorkerService&gt;(</code>
        </line>
        <line>
            <code>        W service, ExceptionManager exceptionManager) =&gt;</code>
        </line>
        <line>
            <code>    _WebLocalWorker._(service, exceptionManager);</code>
        </line>
    </lines>
    <config branch-coverage="true" description-file="false" function-coverage="true" genhtml_hi_limit="90" genhtml_med_limit="75" legend="false" no-sort="false" no-source="false"/>
    <base href="../../"/>
    <base href="../../"/>
</coverage>
