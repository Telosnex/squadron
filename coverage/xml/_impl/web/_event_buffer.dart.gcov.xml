<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<?xml-stylesheet type="text/xsl" href="../../jgenhtml.xsl"?><coverage branch-rate="NaN" branches-covered="0" branches-valid="0" complexity="0" date="2024-08-31" filename="_event_buffer.dart" function-rate="NaN" functions-covered="0" functions-valid="0" line-rate="0.8125" lines-covered="13" lines-valid="16" package="/_impl/web" testname="lcov.info" version="1.5">
    <lines>
        <line>
            <code>typedef BufferedItem&lt;T&gt; = ({T? item, Object? err, StackTrace? st});</code>
        </line>
        <line>
            <code/>
        </line>
        <line>
            <code>class EventBuffer&lt;T&gt; {</code>
        </line>
        <line hits="9">
            <code>  EventBuffer(this._process);</code>
            <hit count="9" name="&lt;unnamed&gt;"/>
        </line>
        <line>
            <code/>
        </line>
        <line>
            <code>  final void Function(BufferedItem&lt;T&gt;) _process;</code>
        </line>
        <line>
            <code/>
        </line>
        <line hits="9">
            <code>  final _buffer = &lt;BufferedItem&lt;T&gt;&gt;[];</code>
            <hit count="9" name="&lt;unnamed&gt;"/>
        </line>
        <line>
            <code/>
        </line>
        <line>
            <code>  var _pauses = 0;</code>
        </line>
        <line>
            <code/>
        </line>
        <line hits="9">
            <code>  bool get isActive =&gt; _pauses &gt; 0;</code>
            <hit count="9" name="&lt;unnamed&gt;"/>
        </line>
        <line>
            <code/>
        </line>
        <line>
            <code>  void add(T item) {</code>
        </line>
        <line hits="2">
            <code>    _buffer.add((item: item, err: null, st: null));</code>
            <hit count="2" name="&lt;unnamed&gt;"/>
        </line>
        <line>
            <code>  }</code>
        </line>
        <line>
            <code/>
        </line>
        <line hits="0">
            <code>  void addError(Object err, StackTrace? st) {</code>
        </line>
        <line hits="0">
            <code>    _buffer.add((item: null, err: err, st: st));</code>
        </line>
        <line hits="0">
            <code>  }</code>
        </line>
        <line>
            <code/>
        </line>
        <line hits="2">
            <code>  void pause() {</code>
            <hit count="2" name="&lt;unnamed&gt;"/>
        </line>
        <line>
            <code>    _pauses++;</code>
        </line>
        <line hits="2">
            <code>  }</code>
            <hit count="2" name="&lt;unnamed&gt;"/>
        </line>
        <line>
            <code/>
        </line>
        <line hits="2">
            <code>  void resume() {</code>
            <hit count="2" name="&lt;unnamed&gt;"/>
        </line>
        <line hits="2">
            <code>    if (_pauses == 1) {</code>
            <hit count="2" name="&lt;unnamed&gt;"/>
        </line>
        <line hits="2">
            <code>      _buffer.forEach(_process);</code>
            <hit count="2" name="&lt;unnamed&gt;"/>
        </line>
        <line hits="2">
            <code>      _buffer.clear();</code>
            <hit count="2" name="&lt;unnamed&gt;"/>
        </line>
        <line>
            <code>    }</code>
        </line>
        <line hits="2">
            <code>    if (_pauses &gt; 0) {</code>
            <hit count="2" name="&lt;unnamed&gt;"/>
        </line>
        <line hits="2">
            <code>      _pauses--;</code>
            <hit count="2" name="&lt;unnamed&gt;"/>
        </line>
        <line>
            <code>    }</code>
        </line>
        <line hits="2">
            <code>  }</code>
            <hit count="2" name="&lt;unnamed&gt;"/>
        </line>
        <line>
            <code>}</code>
        </line>
    </lines>
    <config branch-coverage="true" description-file="false" function-coverage="true" genhtml_hi_limit="90" genhtml_med_limit="75" legend="false" no-sort="false" no-source="false"/>
    <base href="../../"/>
    <base href="../../"/>
</coverage>
