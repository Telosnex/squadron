<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<?xml-stylesheet type="text/xsl" href="../jgenhtml.xsl"?><coverage branch-rate="NaN" branches-covered="0" branches-valid="0" complexity="0" date="2023-09-10" filename="squadron_logger.dart" function-rate="NaN" functions-covered="0" functions-valid="0" line-rate="0.0" lines-covered="0" lines-valid="1" package="/logging" testname="lcov.info" version="1.5">
    <lines>
        <line>
            <code>import 'squadron_log_level.dart';</code>
        </line>
        <line>
            <code/>
        </line>
        <line>
            <code>/// Basic interface for logging</code>
        </line>
        <line>
            <code>abstract class SquadronLogger {</code>
        </line>
        <line hits="0">
            <code>  const SquadronLogger();</code>
        </line>
        <line>
            <code/>
        </line>
        <line>
            <code>  /// Gets the log level</code>
        </line>
        <line>
            <code>  int get logLevel;</code>
        </line>
        <line>
            <code/>
        </line>
        <line>
            <code>  /// Sets the log level</code>
        </line>
        <line>
            <code>  set logLevel(int value);</code>
        </line>
        <line>
            <code/>
        </line>
        <line>
            <code>  /// Base logging method. Implement this method to display the [message].</code>
        </line>
        <line>
            <code>  /// The method is called if the log level is enabled.</code>
        </line>
        <line>
            <code>  void log(String message);</code>
        </line>
        <line>
            <code/>
        </line>
        <line>
            <code>  /// Logs a message at [SquadronLogLevel.debug] level</code>
        </line>
        <line>
            <code>  void debug(dynamic message);</code>
        </line>
        <line>
            <code/>
        </line>
        <line>
            <code>  /// Logs a message at [SquadronLogLevel.finest] level</code>
        </line>
        <line>
            <code>  void finest(dynamic message);</code>
        </line>
        <line>
            <code/>
        </line>
        <line>
            <code>  /// Logs a message at [SquadronLogLevel.finer] level</code>
        </line>
        <line>
            <code>  void finer(dynamic message);</code>
        </line>
        <line>
            <code/>
        </line>
        <line>
            <code>  /// Logs a message at [SquadronLogLevel.fine] level</code>
        </line>
        <line>
            <code>  void fine(dynamic message);</code>
        </line>
        <line>
            <code/>
        </line>
        <line>
            <code>  /// Logs a message at [SquadronLogLevel.config] level</code>
        </line>
        <line>
            <code>  void config(dynamic message);</code>
        </line>
        <line>
            <code/>
        </line>
        <line>
            <code>  /// Logs a message at [SquadronLogLevel.info] level</code>
        </line>
        <line>
            <code>  void info(dynamic message);</code>
        </line>
        <line>
            <code/>
        </line>
        <line>
            <code>  /// Logs a message at [SquadronLogLevel.warning] level</code>
        </line>
        <line>
            <code>  void warning(dynamic message);</code>
        </line>
        <line>
            <code/>
        </line>
        <line>
            <code>  /// Logs a message at [SquadronLogLevel.severe] level</code>
        </line>
        <line>
            <code>  void severe(dynamic message);</code>
        </line>
        <line>
            <code/>
        </line>
        <line>
            <code>  /// Logs a message at [SquadronLogLevel.shout] level</code>
        </line>
        <line>
            <code>  void shout(dynamic message);</code>
        </line>
        <line>
            <code>}</code>
        </line>
    </lines>
    <config branch-coverage="true" description-file="false" function-coverage="true" genhtml_hi_limit="90" genhtml_med_limit="75" legend="false" no-sort="false" no-source="false"/>
    <base href="../"/>
    <base href="../"/>
</coverage>
