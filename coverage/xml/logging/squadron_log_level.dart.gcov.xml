<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<?xml-stylesheet type="text/xsl" href="../jgenhtml.xsl"?><coverage branch-rate="NaN" branches-covered="0" branches-valid="0" complexity="0" date="2024-02-11" filename="squadron_log_level.dart" function-rate="NaN" functions-covered="0" functions-valid="0" line-rate="0.5" lines-covered="7" lines-valid="14" package="/logging" testname="lcov.info" version="1.5">
    <lines>
        <line>
            <code>/// Log level constants, compatible with `package:logging`</code>
        </line>
        <line>
            <code>class SquadronLogLevel {</code>
        </line>
        <line hits="0">
            <code>  SquadronLogLevel._();</code>
        </line>
        <line>
            <code/>
        </line>
        <line>
            <code>  /// Lowest log level</code>
        </line>
        <line>
            <code>  static const all = 0;</code>
        </line>
        <line>
            <code/>
        </line>
        <line>
            <code>  /// Debug log level</code>
        </line>
        <line>
            <code>  static const debug = 1;</code>
        </line>
        <line>
            <code/>
        </line>
        <line>
            <code>  /// Finest log level</code>
        </line>
        <line>
            <code>  static const finest = 300;</code>
        </line>
        <line>
            <code/>
        </line>
        <line>
            <code>  /// Finer log level</code>
        </line>
        <line>
            <code>  static const finer = 400;</code>
        </line>
        <line>
            <code/>
        </line>
        <line>
            <code>  /// Fine log level</code>
        </line>
        <line>
            <code>  static const fine = 500;</code>
        </line>
        <line>
            <code/>
        </line>
        <line>
            <code>  /// Config log level</code>
        </line>
        <line>
            <code>  static const config = 700;</code>
        </line>
        <line>
            <code/>
        </line>
        <line>
            <code>  /// Information log level</code>
        </line>
        <line>
            <code>  static const info = 800;</code>
        </line>
        <line>
            <code/>
        </line>
        <line>
            <code>  /// Warning log level</code>
        </line>
        <line>
            <code>  static const warning = 900;</code>
        </line>
        <line>
            <code/>
        </line>
        <line>
            <code>  /// Severe log level</code>
        </line>
        <line>
            <code>  static const severe = 1000;</code>
        </line>
        <line>
            <code/>
        </line>
        <line>
            <code>  /// Shout log level</code>
        </line>
        <line>
            <code>  static const shout = 1200;</code>
        </line>
        <line>
            <code/>
        </line>
        <line>
            <code>  /// No logging</code>
        </line>
        <line>
            <code>  static const off = 2000;</code>
        </line>
        <line>
            <code/>
        </line>
        <line>
            <code>  /// Gets the log level name</code>
        </line>
        <line hits="1">
            <code>  static String getName(int logLevel) {</code>
            <hit count="1" name="&lt;unnamed&gt;"/>
        </line>
        <line hits="1">
            <code>    if (logLevel &lt; debug) return 'ALL';</code>
            <hit count="1" name="&lt;unnamed&gt;"/>
        </line>
        <line hits="1">
            <code>    if (logLevel &lt; finest) return 'DEBUG';</code>
            <hit count="1" name="&lt;unnamed&gt;"/>
        </line>
        <line hits="1">
            <code>    if (logLevel &lt; finer) return 'FINEST';</code>
            <hit count="1" name="&lt;unnamed&gt;"/>
        </line>
        <line hits="1">
            <code>    if (logLevel &lt; fine) return 'FINER';</code>
            <hit count="1" name="&lt;unnamed&gt;"/>
        </line>
        <line hits="1">
            <code>    if (logLevel &lt; config) return 'FINE';</code>
            <hit count="1" name="&lt;unnamed&gt;"/>
        </line>
        <line hits="1">
            <code>    if (logLevel &lt; info) return 'CONFIG';</code>
            <hit count="1" name="&lt;unnamed&gt;"/>
        </line>
        <line hits="0">
            <code>    if (logLevel &lt; warning) return 'INFO';</code>
        </line>
        <line hits="0">
            <code>    if (logLevel &lt; severe) return 'WARNING';</code>
        </line>
        <line hits="0">
            <code>    if (logLevel &lt; shout) return 'SEVERE';</code>
        </line>
        <line hits="0">
            <code>    if (logLevel &lt; off) return 'SHOUT';</code>
        </line>
        <line hits="0">
            <code>    return 'OFF';</code>
        </line>
        <line hits="0">
            <code>  }</code>
        </line>
        <line>
            <code>}</code>
        </line>
    </lines>
    <config branch-coverage="true" description-file="false" function-coverage="true" genhtml_hi_limit="90" genhtml_med_limit="75" legend="false" no-sort="false" no-source="false"/>
    <base href="../"/>
    <base href="../"/>
</coverage>
