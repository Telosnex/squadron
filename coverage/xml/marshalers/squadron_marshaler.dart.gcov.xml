<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<?xml-stylesheet type="text/xsl" href="../jgenhtml.xsl"?><coverage branch-rate="NaN" branches-covered="0" branches-valid="0" complexity="0" date="2024-03-02" filename="squadron_marshaler.dart" function-rate="NaN" functions-covered="0" functions-valid="0" line-rate="0.0" lines-covered="0" lines-valid="1" package="/marshalers" testname="lcov.info" version="1.5">
    <lines>
        <line>
            <code>/// Base class to serialize/deserialize data of type [T] to a transferable type [S].</code>
        </line>
        <line>
            <code>abstract class SquadronMarshaler&lt;T, S&gt; {</code>
        </line>
        <line hits="0">
            <code>  const SquadronMarshaler();</code>
        </line>
        <line>
            <code/>
        </line>
        <line>
            <code>  /// Serialize [data] of type [T] to type [S], eg. a `String` or some binary representation.</code>
        </line>
        <line>
            <code>  /// `unmarshal(marshal(data))` must produce an instance of [T] that is equivalent to</code>
        </line>
        <line>
            <code>  /// original instance [data].</code>
        </line>
        <line>
            <code>  S marshal(T data);</code>
        </line>
        <line>
            <code/>
        </line>
        <line>
            <code>  /// Deserialize a representation of type [S] back to the original data of type [T].</code>
        </line>
        <line>
            <code>  /// `unmarshal(marshal(data))` must produce an instance of [T] that is equivalent to</code>
        </line>
        <line>
            <code>  /// original instance [data].</code>
        </line>
        <line>
            <code>  T unmarshal(S data);</code>
        </line>
        <line>
            <code>}</code>
        </line>
    </lines>
    <config branch-coverage="true" description-file="false" function-coverage="true" genhtml_hi_limit="90" genhtml_med_limit="75" legend="false" no-sort="false" no-source="false"/>
    <base href="../"/>
    <base href="../"/>
</coverage>
