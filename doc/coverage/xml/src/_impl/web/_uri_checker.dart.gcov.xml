<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<?xml-stylesheet type="text/xsl" href="../../../jgenhtml.xsl"?><coverage branch-rate="NaN" branches-covered="0" branches-valid="0" complexity="0" date="2024-12-25" filename="_uri_checker.dart" function-rate="NaN" functions-covered="0" functions-valid="0" line-rate="0.85714287" lines-covered="6" lines-valid="7" package="src/_impl/web" testname="lcov.info" version="1.6">
    <lines>
        <line number="1">
            <code>import 'dart:js_interop';</code>
        </line>
        <line number="2">
            <code/>
        </line>
        <line number="3">
            <code>import 'package:web/web.dart' as web;</code>
        </line>
        <line number="4">
            <code/>
        </line>
        <line number="5">
            <code>@JS()</code>
        </line>
        <line number="6">
            <code>external JSPromise&lt;web.Response&gt; fetch(JSAny resource, [JSAny? options]);</code>
        </line>
        <line number="7">
            <code/>
        </line>
        <line number="8">
            <code>class UriChecker {</code>
        </line>
        <line number="9">
            <code>  UriChecker._();</code>
        </line>
        <line number="10">
            <code/>
        </line>
        <line hits="12" number="11">
            <code>  static final _headers = {'method': 'HEAD'}.jsify();</code>
            <hit count="12" name="&lt;unnamed&gt;"/>
        </line>
        <line number="12">
            <code/>
        </line>
        <line hits="12" number="13">
            <code>  static Future&lt;bool&gt; exists(Uri url) async {</code>
            <hit count="12" name="&lt;unnamed&gt;"/>
        </line>
        <line hits="12" number="14">
            <code>    if (url.isScheme('data') || url.isScheme('blob')) return true;</code>
            <hit count="12" name="&lt;unnamed&gt;"/>
        </line>
        <line number="15">
            <code>    try {</code>
        </line>
        <line hits="12" number="16">
            <code>      final res = await fetch(url.toString().toJS, _headers).toDart;</code>
            <hit count="12" name="&lt;unnamed&gt;"/>
        </line>
        <line hits="12" number="17">
            <code>      return res.ok &amp;&amp; (200 &lt;= res.status) &amp;&amp; (res.status &lt; 300);</code>
            <hit count="12" name="&lt;unnamed&gt;"/>
        </line>
        <line number="18">
            <code>    } catch (_) {</code>
        </line>
        <line hits="0" number="19">
            <code>      return false;</code>
        </line>
        <line number="20">
            <code>    }</code>
        </line>
        <line hits="12" number="21">
            <code>  }</code>
            <hit count="12" name="&lt;unnamed&gt;"/>
        </line>
        <line number="22">
            <code>}</code>
        </line>
    </lines>
    <config branch-coverage="true" description-file="false" function-coverage="true" genhtml_hi_limit="90" genhtml_med_limit="75" legend="false" no-sort="false" no-source="false" show-details="false"/>
    <base href="../../../"/>
    <base href="../../../"/>
</coverage>
