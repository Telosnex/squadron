<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<?xml-stylesheet type="text/xsl" href="../../jgenhtml.xsl"?><coverage branch-rate="NaN" branches-covered="0" branches-valid="0" complexity="0" date="2025-03-16" filename="squadron_service.dart" function-rate="NaN" functions-covered="0" functions-valid="0" line-rate="0.2857143" lines-covered="2" lines-valid="7" package="src/annotations" testname="lcov.info" version="1.6">
    <lines>
        <line number="1">
            <code>import '../pool/worker_pool.dart';</code>
        </line>
        <line number="2">
            <code>import 'target_platform.dart';</code>
        </line>
        <line number="3">
            <code/>
        </line>
        <line number="4">
            <code>const localService = SquadronService.local();</code>
        </line>
        <line number="5">
            <code>const localWorker = LocalWorkerParam._();</code>
        </line>
        <line number="6">
            <code/>
        </line>
        <line number="7">
            <code>class LocalWorkerParam {</code>
        </line>
        <line hits="12" number="8">
            <code>  const LocalWorkerParam._();</code>
            <hit count="12" name="&lt;unnamed&gt;"/>
        </line>
        <line number="9">
            <code>}</code>
        </line>
        <line number="10">
            <code/>
        </line>
        <line number="11">
            <code>/// Annotation for service classes to be wrapped as workers.</code>
        </line>
        <line number="12">
            <code>class SquadronService {</code>
        </line>
        <line hits="0" number="13">
            <code>  const SquadronService({</code>
        </line>
        <line number="14">
            <code>    this.pool = true,</code>
        </line>
        <line number="15">
            <code>    this.targetPlatform = TargetPlatform.all,</code>
        </line>
        <line number="16">
            <code>    String? baseUrl,</code>
        </line>
        <line number="17">
            <code>  })  : baseUrl = baseUrl ?? '',</code>
        </line>
        <line number="18">
            <code>        local = false;</code>
        </line>
        <line number="19">
            <code/>
        </line>
        <line hits="0" number="20">
            <code>  const SquadronService.web({bool pool = true, String? baseUrl})</code>
        </line>
        <line hits="0" number="21">
            <code>      : this(pool: pool, targetPlatform: TargetPlatform.web, baseUrl: baseUrl);</code>
        </line>
        <line number="22">
            <code/>
        </line>
        <line hits="0" number="23">
            <code>  const SquadronService.vm({bool pool = true})</code>
        </line>
        <line hits="0" number="24">
            <code>      : this(pool: pool, targetPlatform: TargetPlatform.vm);</code>
        </line>
        <line number="25">
            <code/>
        </line>
        <line hits="12" number="26">
            <code>  const SquadronService.local()</code>
            <hit count="12" name="&lt;unnamed&gt;"/>
        </line>
        <line number="27">
            <code>      : pool = false,</code>
        </line>
        <line number="28">
            <code>        local = true,</code>
        </line>
        <line number="29">
            <code>        targetPlatform = TargetPlatform.none,</code>
        </line>
        <line number="30">
            <code>        baseUrl = '';</code>
        </line>
        <line number="31">
            <code/>
        </line>
        <line number="32">
            <code>  /// Controls code generation of a [WorkerPool] exposing the target service</code>
        </line>
        <line number="33">
            <code>  /// class. `true` by default.</code>
        </line>
        <line number="34">
            <code>  final bool pool;</code>
        </line>
        <line number="35">
            <code/>
        </line>
        <line number="36">
            <code>  /// Controls code generation of a [LocalWorkerClient] exposing the target</code>
        </line>
        <line number="37">
            <code>  /// service class. `false` by default.</code>
        </line>
        <line number="38">
            <code>  final bool local;</code>
        </line>
        <line number="39">
            <code/>
        </line>
        <line number="40">
            <code>  /// Controls code generation of a entry points for various platforms.</code>
        </line>
        <line number="41">
            <code>  final int targetPlatform;</code>
        </line>
        <line number="42">
            <code/>
        </line>
        <line number="43">
            <code>  /// For Web-based workers, indicates the [baseUrl] where the Web Worker will</code>
        </line>
        <line number="44">
            <code>  /// be exposed in production.</code>
        </line>
        <line number="45">
            <code>  final String baseUrl;</code>
        </line>
        <line number="46">
            <code>}</code>
        </line>
    </lines>
    <config branch-coverage="true" description-file="false" function-coverage="true" genhtml_hi_limit="90" genhtml_med_limit="75" legend="false" no-sort="false" no-source="false" show-details="false"/>
    <base href="../../"/>
    <base href="../../"/>
</coverage>
