<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<?xml-stylesheet type="text/xsl" href="../../jgenhtml.xsl"?><coverage branch-rate="NaN" branches-covered="0" branches-valid="0" complexity="0" date="2024-09-21" filename="squadron_service.dart" function-rate="NaN" functions-covered="0" functions-valid="0" line-rate="0.0" lines-covered="0" lines-valid="5" package="src/annotations" testname="lcov.info" version="1.6">
    <lines>
        <line number="1">
            <code>import '../pool/worker_pool.dart';</code>
        </line>
        <line number="2">
            <code/>
        </line>
        <line number="3">
            <code>/// Annotation for service classes to be wrapped as workers.</code>
        </line>
        <line number="4">
            <code>class SquadronService {</code>
        </line>
        <line hits="0" number="5">
            <code>  const SquadronService({</code>
        </line>
        <line number="6">
            <code>    this.pool = true,</code>
        </line>
        <line number="7">
            <code>    this.vm = true,</code>
        </line>
        <line number="8">
            <code>    this.web = true,</code>
        </line>
        <line number="9">
            <code>    this.wasm = false,</code>
        </line>
        <line number="10">
            <code>    this.baseUrl = '',</code>
        </line>
        <line number="11">
            <code>  });</code>
        </line>
        <line number="12">
            <code/>
        </line>
        <line hits="0" number="13">
            <code>  const SquadronService.web(</code>
        </line>
        <line number="14">
            <code>      {bool pool = true, bool wasm = false, required String baseUrl})</code>
        </line>
        <line hits="0" number="15">
            <code>      : this(pool: pool, vm: false, web: true, wasm: wasm, baseUrl: baseUrl);</code>
        </line>
        <line number="16">
            <code/>
        </line>
        <line hits="0" number="17">
            <code>  const SquadronService.vm({bool pool = true})</code>
        </line>
        <line hits="0" number="18">
            <code>      : this(pool: pool, vm: true, web: false, wasm: false);</code>
        </line>
        <line number="19">
            <code/>
        </line>
        <line number="20">
            <code>  /// Controls code generation of a [WorkerPool] exposing the target service class.</code>
        </line>
        <line number="21">
            <code>  /// `true` by default.</code>
        </line>
        <line number="22">
            <code>  final bool pool;</code>
        </line>
        <line number="23">
            <code/>
        </line>
        <line number="24">
            <code>  /// Controls code generation of a native entry point (for Isolate). `true` by</code>
        </line>
        <line number="25">
            <code>  /// default.</code>
        </line>
        <line number="26">
            <code>  final bool vm;</code>
        </line>
        <line number="27">
            <code/>
        </line>
        <line number="28">
            <code>  /// Controls code generation of a Web entry point (for Web Worker). `true` by</code>
        </line>
        <line number="29">
            <code>  /// default.</code>
        </line>
        <line number="30">
            <code>  final bool web;</code>
        </line>
        <line number="31">
            <code/>
        </line>
        <line number="32">
            <code>  /// Controls entry-point extension for Web worker URIs: '.js' if `false`, '.wasm'</code>
        </line>
        <line number="33">
            <code>  /// if `true`. By default, JavaScript Web workers are used.</code>
        </line>
        <line number="34">
            <code>  final bool wasm;</code>
        </line>
        <line number="35">
            <code/>
        </line>
        <line number="36">
            <code>  /// For Web-based workers, indicates the [baseUrl] where the Web Worker will</code>
        </line>
        <line number="37">
            <code>  /// be exposed in production.</code>
        </line>
        <line number="38">
            <code>  final String baseUrl;</code>
        </line>
        <line number="39">
            <code>}</code>
        </line>
    </lines>
    <config branch-coverage="true" description-file="false" function-coverage="true" genhtml_hi_limit="90" genhtml_med_limit="75" legend="false" no-sort="false" no-source="false" show-details="false"/>
    <base href="../../"/>
    <base href="../../"/>
</coverage>
