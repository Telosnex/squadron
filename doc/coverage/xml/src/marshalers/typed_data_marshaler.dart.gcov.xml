<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<?xml-stylesheet type="text/xsl" href="../../jgenhtml.xsl"?><coverage branch-rate="NaN" branches-covered="0" branches-valid="0" complexity="0" date="2025-01-12" filename="typed_data_marshaler.dart" function-rate="NaN" functions-covered="0" functions-valid="0" line-rate="1.0" lines-covered="23" lines-valid="23" package="src/marshalers" testname="lcov.info" version="1.6">
    <lines>
        <line number="1">
            <code>import 'dart:typed_data';</code>
        </line>
        <line number="2">
            <code/>
        </line>
        <line number="3">
            <code>import '../converters/converter.dart';</code>
        </line>
        <line number="4">
            <code>import 'squadron_marshaler.dart';</code>
        </line>
        <line number="5">
            <code/>
        </line>
        <line number="6">
            <code>class TypedDataMarshaler&lt;T extends TypedData&gt;</code>
        </line>
        <line number="7">
            <code>    implements SquadronMarshaler&lt;T, ByteBuffer&gt; {</code>
        </line>
        <line hits="14" number="8">
            <code>  const TypedDataMarshaler();</code>
            <hit count="14" name="&lt;unnamed&gt;"/>
        </line>
        <line number="9">
            <code/>
        </line>
        <line hits="1" number="10">
            <code>  @override</code>
            <hit count="1" name="&lt;unnamed&gt;"/>
        </line>
        <line hits="1" number="11">
            <code>  ByteBuffer marshal(T data) =&gt; data.buffer;</code>
            <hit count="1" name="&lt;unnamed&gt;"/>
        </line>
        <line number="12">
            <code/>
        </line>
        <line hits="1" number="13">
            <code>  @override</code>
            <hit count="1" name="&lt;unnamed&gt;"/>
        </line>
        <line hits="4" number="14">
            <code>  T unmarshal(ByteBuffer data) =&gt; _td&lt;T&gt;(_typeDataCastors[T] as Cast&lt;T&gt;)(data);</code>
            <hit count="4" name="&lt;unnamed&gt;"/>
        </line>
        <line number="15">
            <code>}</code>
        </line>
        <line number="16">
            <code/>
        </line>
        <line hits="1" number="17">
            <code>Cast&lt;T&gt; _td&lt;T&gt;(T Function(ByteBuffer) view) =&gt;</code>
            <hit count="1" name="&lt;unnamed&gt;"/>
        </line>
        <line hits="3" number="18">
            <code>    (x) =&gt; (x is T) ? x : view(x as ByteBuffer)!;</code>
            <hit count="3" name="&lt;unnamed&gt;"/>
        </line>
        <line number="19">
            <code/>
        </line>
        <line hits="3" number="20">
            <code>final Map&lt;Type, Cast&gt; _typeDataCastors = {</code>
            <hit count="3" name="&lt;unnamed&gt;"/>
        </line>
        <line hits="1" number="21">
            <code>  ByteData: _td&lt;ByteData&gt;(ByteData.view),</code>
            <hit count="1" name="&lt;unnamed&gt;"/>
        </line>
        <line hits="1" number="22">
            <code>  Uint8ClampedList: _td&lt;Uint8ClampedList&gt;(Uint8ClampedList.view),</code>
            <hit count="1" name="&lt;unnamed&gt;"/>
        </line>
        <line hits="1" number="23">
            <code>  Uint8List: _td&lt;Uint8List&gt;(Uint8List.view),</code>
            <hit count="1" name="&lt;unnamed&gt;"/>
        </line>
        <line hits="1" number="24">
            <code>  Int8List: _td&lt;Int8List&gt;(Int8List.view),</code>
            <hit count="1" name="&lt;unnamed&gt;"/>
        </line>
        <line hits="1" number="25">
            <code>  Uint16List: _td&lt;Uint16List&gt;(Uint16List.view),</code>
            <hit count="1" name="&lt;unnamed&gt;"/>
        </line>
        <line hits="1" number="26">
            <code>  Int16List: _td&lt;Int16List&gt;(Int16List.view),</code>
            <hit count="1" name="&lt;unnamed&gt;"/>
        </line>
        <line hits="1" number="27">
            <code>  Uint32List: _td&lt;Uint32List&gt;(Uint32List.view),</code>
            <hit count="1" name="&lt;unnamed&gt;"/>
        </line>
        <line hits="1" number="28">
            <code>  Int32List: _td&lt;Int32List&gt;(Int32List.view),</code>
            <hit count="1" name="&lt;unnamed&gt;"/>
        </line>
        <line hits="1" number="29">
            <code>  Int32x4List: _td&lt;Int32x4List&gt;(Int32x4List.view),</code>
            <hit count="1" name="&lt;unnamed&gt;"/>
        </line>
        <line hits="1" number="30">
            <code>  Uint64List: _td&lt;Uint64List&gt;(Uint64List.view),</code>
            <hit count="1" name="&lt;unnamed&gt;"/>
        </line>
        <line hits="1" number="31">
            <code>  Int64List: _td&lt;Int64List&gt;(Int64List.view),</code>
            <hit count="1" name="&lt;unnamed&gt;"/>
        </line>
        <line hits="1" number="32">
            <code>  Float32List: _td&lt;Float32List&gt;(Float32List.view),</code>
            <hit count="1" name="&lt;unnamed&gt;"/>
        </line>
        <line hits="1" number="33">
            <code>  Float32x4List: _td&lt;Float32x4List&gt;(Float32x4List.view),</code>
            <hit count="1" name="&lt;unnamed&gt;"/>
        </line>
        <line hits="1" number="34">
            <code>  Float64List: _td&lt;Float64List&gt;(Float64List.view),</code>
            <hit count="1" name="&lt;unnamed&gt;"/>
        </line>
        <line hits="1" number="35">
            <code>  Float64x2List: _td&lt;Float64x2List&gt;(Float64x2List.view),</code>
            <hit count="1" name="&lt;unnamed&gt;"/>
        </line>
        <line number="36">
            <code>};</code>
        </line>
    </lines>
    <config branch-coverage="true" description-file="false" function-coverage="true" genhtml_hi_limit="90" genhtml_med_limit="75" legend="false" no-sort="false" no-source="false" show-details="false"/>
    <base href="../../"/>
    <base href="../../"/>
</coverage>
