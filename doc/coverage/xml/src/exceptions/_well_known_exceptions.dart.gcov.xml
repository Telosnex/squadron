<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<?xml-stylesheet type="text/xsl" href="../../jgenhtml.xsl"?><coverage branch-rate="NaN" branches-covered="0" branches-valid="0" complexity="0" date="2024-11-17" filename="_well_known_exceptions.dart" function-rate="NaN" functions-covered="0" functions-valid="0" line-rate="1.0" lines-covered="6" lines-valid="6" package="src/exceptions" testname="lcov.info" version="1.6">
    <lines>
        <line number="1">
            <code>import 'dart:async';</code>
        </line>
        <line number="2">
            <code/>
        </line>
        <line number="3">
            <code>import 'package:cancelation_token/cancelation_token.dart';</code>
        </line>
        <line number="4">
            <code>import 'package:meta/meta.dart';</code>
        </line>
        <line number="5">
            <code/>
        </line>
        <line number="6">
            <code>import 'squadron_canceled_exception.dart';</code>
        </line>
        <line number="7">
            <code>import 'squadron_exception.dart';</code>
        </line>
        <line number="8">
            <code>import 'squadron_timeout_exception.dart';</code>
        </line>
        <line number="9">
            <code/>
        </line>
        <line number="10">
            <code>const $squadronErrorType = '\$sqdrn';</code>
        </line>
        <line number="11">
            <code>const $workerExceptionType = '\$wrkr';</code>
        </line>
        <line number="12">
            <code>const $canceledExceptionType = '\$cncld';</code>
        </line>
        <line number="13">
            <code>const $canceledExceptionsType = '\$cncld*';</code>
        </line>
        <line number="14">
            <code>const $timeoutExceptionType = '\$tmt';</code>
        </line>
        <line number="15">
            <code/>
        </line>
        <line number="16">
            <code>const $reservedExceptionTypeIds = {</code>
        </line>
        <line number="17">
            <code>  $squadronErrorType,</code>
        </line>
        <line number="18">
            <code>  $workerExceptionType,</code>
        </line>
        <line number="19">
            <code>  $canceledExceptionType,</code>
        </line>
        <line number="20">
            <code>  $canceledExceptionsType,</code>
        </line>
        <line number="21">
            <code>  $timeoutExceptionType,</code>
        </line>
        <line number="22">
            <code>};</code>
        </line>
        <line number="23">
            <code/>
        </line>
        <line number="24">
            <code>@internal</code>
        </line>
        <line number="25">
            <code>extension CanceledConversionExt on CanceledException {</code>
        </line>
        <line hits="2" number="26">
            <code>  SquadronException toSquadronException(</code>
            <hit count="2" name="&lt;unnamed&gt;"/>
        </line>
        <line number="27">
            <code>          [String? tokenId, StackTrace? stackTrace]) =&gt;</code>
        </line>
        <line hits="2" number="28">
            <code>      SquadronCanceledException.from(</code>
            <hit count="2" name="&lt;unnamed&gt;"/>
        </line>
        <line number="29">
            <code>        tokenId ?? '',</code>
        </line>
        <line number="30">
            <code>        this,</code>
        </line>
        <line number="31">
            <code>        stackTrace,</code>
        </line>
        <line number="32">
            <code>      );</code>
        </line>
        <line number="33">
            <code>}</code>
        </line>
        <line number="34">
            <code/>
        </line>
        <line number="35">
            <code>@internal</code>
        </line>
        <line number="36">
            <code>extension TimeoutConversionExt on TimeoutException {</code>
        </line>
        <line hits="2" number="37">
            <code>  SquadronException toSquadronException(</code>
            <hit count="2" name="&lt;unnamed&gt;"/>
        </line>
        <line number="38">
            <code>          [String? tokenId, StackTrace? stackTrace]) =&gt;</code>
        </line>
        <line hits="2" number="39">
            <code>      SquadronTimeoutException(</code>
            <hit count="2" name="&lt;unnamed&gt;"/>
        </line>
        <line number="40">
            <code>        tokenId ?? '',</code>
        </line>
        <line hits="2" number="41">
            <code>        message ?? 'Operation timeout',</code>
            <hit count="2" name="&lt;unnamed&gt;"/>
        </line>
        <line hits="2" number="42">
            <code>        duration,</code>
            <hit count="2" name="&lt;unnamed&gt;"/>
        </line>
        <line number="43">
            <code>        stackTrace,</code>
        </line>
        <line number="44">
            <code>      );</code>
        </line>
        <line number="45">
            <code>}</code>
        </line>
    </lines>
    <config branch-coverage="true" description-file="false" function-coverage="true" genhtml_hi_limit="90" genhtml_med_limit="75" legend="false" no-sort="false" no-source="false" show-details="false"/>
    <base href="../../"/>
    <base href="../../"/>
</coverage>
